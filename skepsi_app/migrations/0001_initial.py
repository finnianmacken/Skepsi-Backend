# Generated by Django 3.1.7 on 2021-07-29 01:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('position', models.CharField(choices=[('positive', 'positive'), ('negative', 'negative')], default='positive', max_length=20)),
                ('start', models.IntegerField(blank=True, default=0)),
                ('stop', models.IntegerField(blank=True, default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=2000)),
                ('authors', models.CharField(max_length=2000)),
                ('abstract', models.TextField(default='', max_length=10000)),
                ('created_date', models.CharField(default='', max_length=500)),
                ('citationMLA', models.TextField(default='', max_length=2000)),
                ('citationAPA', models.TextField(default='', max_length=2000)),
                ('citationChicago', models.TextField(default='', max_length=2000)),
                ('md', models.TextField(default='', max_length=500000)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=40)),
                ('domain', models.CharField(max_length=75)),
                ('slug', models.SlugField(default='', max_length=100)),
                ('description', models.TextField(default='', max_length=10000)),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='media/')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(blank=True, choices=[('Validity', 'Validity'), ('Novelty', 'Novelty'), ('Domain Importance', 'Domain Importance')], default='Validity', max_length=100, null=True)),
                ('explanation', models.TextField(max_length=10000)),
                ('scoreNumber', models.IntegerField(blank=True, default=1, null=True)),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='skepsi_app.annotation')),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authors', models.TextField(max_length=1000)),
                ('title', models.TextField(default='', max_length=2000)),
                ('citation', models.TextField(blank=True, default='', max_length=2000)),
                ('paperOrder', models.IntegerField(default=1)),
                ('paper', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='references', to='skepsi_app.paper')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isUser', models.BooleanField(default=False)),
                ('isScientist', models.BooleanField(default=False)),
                ('isDomainExpert', models.BooleanField(default=False)),
                ('orcid', models.CharField(default='', max_length=30)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='paper',
            name='topic',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='papers', to='skepsi_app.topic'),
        ),
        migrations.CreateModel(
            name='Figure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/')),
                ('name', models.CharField(default='', max_length=2500)),
                ('figure_number', models.IntegerField(default=1)),
                ('caption', models.TextField(default='', max_length=50000)),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='figures', to='skepsi_app.paper')),
            ],
        ),
        migrations.AddField(
            model_name='annotation',
            name='paper',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='skepsi_app.paper'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='skepsi_app.annotation'),
        ),
        migrations.AddConstraint(
            model_name='score',
            constraint=models.CheckConstraint(check=models.Q(('scoreNumber__gte', 1), ('scoreNumber__lte', 10)), name='A score is valid between 1 and 10 (inclusive)'),
        ),
        migrations.AlterUniqueTogether(
            name='reference',
            unique_together={('paper', 'paperOrder')},
        ),
    ]
